<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.daocaore.bms.sys.biz.dao.AlarmDao">
	<resultMap type="cn.com.daocaore.bms.sys.biz.entity.Alarm" id="BaseResultMap">
        <result property="level" column="level" javaType="Integer"/>
        <result property="total" column="total" javaType="Long"/>
	</resultMap>
	
	<sql id="full-columns" >
        t.level,
        t.total
	</sql>
	
	<!-- 查询条件 -->
	<sql id="queryCriteria">
		 <if test="@OGNL@isNotEmpty(level)">
            AND t.level = #{level}
         </if>
		 <if test="@OGNL@isNotEmpty(total)">
            AND t.total = #{total}
         </if>
	</sql>

	<insert id="insert" parameterType="cn.com.daocaore.bms.sys.biz.entity.Alarm" >
		<![CDATA[
	        INSERT INTO alarm (
	            level ,
	            total 
	        ) VALUES (
	        	#{level},
	        	#{total}
	        )
	    ]]>
    	<selectKey resultType="java.lang.Integer" keyProperty="level">
			SELECT LAST_INSERT_ID() AS level
        </selectKey>
	</insert>
	
	<insert id="insertBatch" parameterType="java.util.List" >
		<![CDATA[
	        INSERT INTO alarm (
	            level ,
	            total 
	        ) VALUES 
	        <foreach collection="list" item="item" index="index" separator=",">
	        (
	        	#{level},
	        	#{total}
	        )
	        </foreach>
	    ]]>
	</insert>
	
	<select id="getById" parameterType="java.lang.Long" resultMap="BaseResultMap">
	   	SELECT <include refid="full-columns" />
       	<![CDATA[
       	FROM alarm t
       	WHERE t.level = #{value}
		]]>
    </select>
	
	<select id="query" parameterType="map" resultMap="BaseResultMap">
		SELECT <include refid="full-columns" />
	    FROM alarm t
		<where> <include refid="queryCriteria"/>  </where>
		<if test="@OGNL@isNotEmpty(orderColumn) ">
        ORDER BY t.${orderColumn} <if test="@OGNL@isNotEmpty(orderDirection) ">${orderDirection}</if>
        </if>
	</select>
	
	<select id="queryPage" parameterType="map" resultMap="BaseResultMap">
		SELECT 
        <include refid="full-columns" />
            FROM alarm t
		<where> <include refid="queryCriteria"/>  </where>
		<if test="@OGNL@isNotEmpty(orderColumn) ">
        ORDER BY t.${orderColumn} <if test="@OGNL@isNotEmpty(orderDirection) ">${orderDirection}</if>
        </if>
        LIMIT #{start}, #{pageSize}
	</select>

	<select id="queryCount" parameterType="map" resultType="java.lang.Integer">
		select count(id) FROM alarm 
        <where> <include refid="queryCriteria"/>  </where>
	</select>
</mapper>
