<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.daocaore.bms.sys.biz.dao.SysWarningDao">
	<resultMap type="cn.com.daocaore.bms.sys.biz.entity.SysWarning" id="BaseResultMap">
        <result property="id" column="id" javaType="Integer"/>
        <result property="warningDate" column="warning_date" javaType="Date"/>
        <result property="action" column="action" javaType="String"/>
        <result property="methodName" column="method_name" javaType="String"/>
        <result property="returnType" column="return_type" javaType="String"/>
        <result property="returnValue" column="return_value" javaType="String"/>
        <result property="args" column="args" javaType="String"/>
        <result property="annotations" column="annotations" javaType="String"/>
        <result property="advice" column="advice" javaType="String"/>
        <result property="contactWay" column="contact_way" javaType="String"/>
        <result property="status" column="status" javaType="Integer"/>
        <result property="ip" column="ip" javaType="String"/>
		<result property="devices" column="devices" javaType="String"/>
        <result property="operator" column="operator" javaType="String"/>
        <result property="gmtCreate" column="gmt_create" javaType="Date"/>
        <result property="gmtModify" column="gmt_modify" javaType="Date"/>
	</resultMap>
	
	<sql id="full-columns" >
        t.id,
        t.warning_date,
        t.action,
        t.method_name,
        t.return_type,
        t.return_value,
        t.args,
        t.annotations,
        t.advice,
        t.contact_way,
        t.status,
        t.ip,
        t.devices,
        t.operator,
        t.gmt_create,
        t.gmt_modify
	</sql>
	
	<!-- 查询条件 -->
	<sql id="queryCriteria">
		 <if test="@OGNL@isNotEmpty(id)">
            AND t.id = #{id}
         </if>
		 <if test="@OGNL@isNotEmpty(warningDate)">
            AND t.warning_date = #{warningDate}
         </if>
		 <if test="@OGNL@isNotEmpty(action)">
            AND t.action = #{action}
         </if>
		 <if test="@OGNL@isNotEmpty(methodName)">
            AND t.method_name = #{methodName}
         </if>
		 <if test="@OGNL@isNotEmpty(returnType)">
            AND t.return_type = #{returnType}
         </if>
		 <if test="@OGNL@isNotEmpty(returnValue)">
            AND t.return_value = #{returnValue}
         </if>
		 <if test="@OGNL@isNotEmpty(args)">
            AND t.args = #{args}
         </if>
		 <if test="@OGNL@isNotEmpty(annotations)">
            AND t.annotations = #{annotations}
         </if>
		 <if test="@OGNL@isNotEmpty(advice)">
            AND t.advice = #{advice}
         </if>
		 <if test="@OGNL@isNotEmpty(contactWay)">
            AND t.contact_way = #{contactWay}
         </if>
		 <if test="@OGNL@isNotEmpty(status)">
            AND t.status = #{status}
         </if>
         <if test="@OGNL@isNotEmpty(ip)">
            AND t.ip = #{ip}
         </if>
         <if test="@OGNL@isNotEmpty(devices)">
            AND t.devices = #{devices}
         </if>
		 <if test="@OGNL@isNotEmpty(operator)">
            AND t.operator = #{operator}
         </if>
		 <if test="@OGNL@isNotEmpty(gmtCreate)">
            AND t.gmt_create = #{gmtCreate}
         </if>
		 <if test="@OGNL@isNotEmpty(gmtModify)">
            AND t.gmt_modify = #{gmtModify}
         </if>
	</sql>

	<insert id="insert" parameterType="cn.com.daocaore.bms.sys.biz.entity.SysWarning" >
		<![CDATA[
	        INSERT INTO sys_warning (
	            warning_date ,
	            action ,
	            method_name ,
	            return_type ,
	            return_value ,
	            args ,
	            annotations ,
	            advice ,
	            contact_way ,
	            status ,
	            ip ,
	            devices ,
	            operator ,
	            gmt_create ,
	            gmt_modify 
	        ) VALUES (
	        	#{warningDate},
	        	#{action},
	        	#{methodName},
	        	#{returnType},
	        	#{returnValue},
	        	#{args},
	        	#{annotations},
	        	#{advice},
	        	#{contactWay},
	        	#{status},
	        	#{ip},
	        	#{devices},
	        	#{operator},
	        	now(),
	        	now()
	        )
	    ]]>
    	<selectKey resultType="java.lang.Integer" keyProperty="id">
			SELECT LAST_INSERT_ID() AS id
        </selectKey>
	</insert>
	
	<insert id="insertBatch" parameterType="java.util.List" >
		<![CDATA[
	        INSERT INTO sys_warning (
	            warning_date ,
	            action ,
	            method_name ,
	            return_type ,
	            return_value ,
	            args ,
	            annotations ,
	            advice ,
	            contact_way ,
	            status ,
	            ip ,
	            devices ,
	            operator ,
	            gmt_create ,
	            gmt_modify 
	        ) VALUES 
	        <foreach collection="list" item="item" index="index" separator=",">
	        (
	        	#{warningDate},
	        	#{action},
	        	#{methodName},
	        	#{returnType},
	        	#{returnValue},
	        	#{args},
	        	#{annotations},
	        	#{advice},
	        	#{contactWay},
	        	#{status},
	        	#{ip},
	        	#{devices},
	        	#{operator},
	        	#{gmtCreate},
	        	#{gmtModify}
	        )
	        </foreach>
	    ]]>
	</insert>
	
	<update id="delete" parameterType="java.lang.Long">
        UPDATE sys_warning SET deleted=1 
        WHERE deleted=0 AND
        	id = #{value}
	</update>
	<update id="deleteBatch" parameterType="list" >
        UPDATE sys_warning SET deleted=1 
        WHERE deleted=0 AND
        	id IN 
        <foreach collection="list" item = "id" open="(" separator="," close=")">
        	#{id}
		</foreach>
	</update>
	
	<update id="update" parameterType="cn.com.daocaore.bms.sys.biz.entity.SysWarning">
        UPDATE sys_warning 
        <set>
        	<if test="@OGNL@isNotEmpty(warningDate)">
	            warning_date = #{warningDate},
	        </if>
        	<if test="@OGNL@isNotEmpty(action)">
	            action = #{action},
	        </if>
        	<if test="@OGNL@isNotEmpty(methodName)">
	            method_name = #{methodName},
	        </if>
        	<if test="@OGNL@isNotEmpty(returnType)">
	            return_type = #{returnType},
	        </if>
        	<if test="@OGNL@isNotEmpty(returnValue)">
	            return_value = #{returnValue},
	        </if>
        	<if test="@OGNL@isNotEmpty(args)">
	            args = #{args},
	        </if>
        	<if test="@OGNL@isNotEmpty(annotations)">
	            annotations = #{annotations},
	        </if>
        	<if test="@OGNL@isNotEmpty(advice)">
	            advice = #{advice},
	        </if>
        	<if test="@OGNL@isNotEmpty(contactWay)">
	            contact_way = #{contactWay},
	        </if>
        	<if test="@OGNL@isNotEmpty(status)">
	            status = #{status},
	        </if>
	        <if test="@OGNL@isNotEmpty(ip)">
	            ip = #{ip},
	        </if>
	        <if test="@OGNL@isNotEmpty(devices)">
	            devices = #{devices},
	        </if>
        	<if test="@OGNL@isNotEmpty(operator)">
	            operator = #{operator},
	        </if>
        	<if test="@OGNL@isNotEmpty(gmtCreate)">
	            gmt_create = #{gmtCreate},
	        </if>
        	<if test="@OGNL@isNotEmpty(gmtModify)">
	            gmt_modify = #{gmtModify},
	        </if>
        </set>
        WHERE deleted=0
        	AND id = #{id}
	</update>
	
	<select id="getById" parameterType="java.lang.Long" resultMap="BaseResultMap">
	   	SELECT <include refid="full-columns" />
       	<![CDATA[
       	FROM sys_warning t
       	WHERE t.id = #{value}
		]]>
    </select>
	
	<select id="query" parameterType="map" resultMap="BaseResultMap">
		SELECT <include refid="full-columns" />
	    FROM sys_warning t
		<where> <include refid="queryCriteria"/>  </where>
		<if test="@OGNL@isNotEmpty(orderColumn) ">
        ORDER BY t.${orderColumn} <if test="@OGNL@isNotEmpty(orderDirection) ">${orderDirection}</if>
        </if>
	</select>
	
	<select id="queryPage" parameterType="map" resultMap="BaseResultMap">
		SELECT 
        <include refid="full-columns" />
            FROM sys_warning t
		<where> <include refid="queryCriteria"/>  </where>
		<if test="@OGNL@isNotEmpty(orderColumn) ">
        ORDER BY t.${orderColumn} <if test="@OGNL@isNotEmpty(orderDirection) ">${orderDirection}</if>
        </if>
        LIMIT #{startRow}, #{pageSize}
	</select>

	<select id="queryCount" parameterType="map" resultType="java.lang.Integer">
		select count(id) FROM sys_warning t
        <where> <include refid="queryCriteria"/>  </where>
	</select>
</mapper>
