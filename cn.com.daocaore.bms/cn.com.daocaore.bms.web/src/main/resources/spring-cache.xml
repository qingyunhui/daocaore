<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/cache 
        http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd"
	    >

	<!-- ：扫描指定包下的类、以完成Bean创建和自动依赖注入的功能 -->  
	<!-- <context:component-scan base-package="cn.com.yuzhushui.movie.cache" /> -->
	<!-- 启用缓存注解功能，这个是必须的，否则注解不会生效,redis的实现是 redisCacheManager    集群模式注释这个配置 -->
	<!-- <cache:annotation-driven cache-manager="cacheManager" /> -->
	<!-- spring自己的缓存管理器，这里定义了两个缓存位置名称 ，既注解中的value   集群模式注释这个配置 
	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
		<property name="caches">
			<set>
				<bean
					class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
					<property name="name" value="springraincache" />
				</bean>
				<bean
					class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
					<property name="name" value="springrainqxcache" />
				</bean>
			</set>
		</property>
	</bean>-->
	<!-- 集群模式 解开这个配置 -->
	<!-- <cache:annotation-driven cache-manager="redisCacheManager" /> -->
	<!--redisCacheManager 用于spring 缓存, redisCached 为redis的工具类,用于业务的缓存. 基于redis分布的session共享也是基于这个redisCached, 集群模式解开这个配置,并注意修改config.properties 中redis的连接参数 -->
	<!-- <bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager" c:template-ref="redisTemplate" /> -->

	<!-- 适合单机情况下 -->

	<!-- <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.maxTotal}" />
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
	</bean>

	<bean id="redisCached" class="XXXXXX.cached.RedisCachedImpl">
		<property name="redisTemplate" ref="redisTemplate" />
		<property name="expire" value="1800000" />
	</bean>

	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName"     value="${redis.ip}" />
		<property name="port" 		  value="${redis.port}" />
		<property name="password"     value="${redis.password}" />
		<property name="poolConfig"   ref="jedisPoolConfig" />
	</bean> -->

	<!-- 适合集群、可以连接主从rebdis服务 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" 		value="${public.redis.maxtotal}"/>
        <property name="maxIdle" 	    value="${public.redis.maxidle}"/>
        <property name="maxWaitMillis"  value="${public.redis.maxwaitmillis}"/>
        <property name="testOnBorrow"   value="${public.redis.testonborrow}"/>
        <property name="testOnReturn"   value="${public.redis.testonreturn}"/>
    </bean>
    
    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1">
            <list>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg name="host" index="0" value="${public.redis.ip}"/>
                    <constructor-arg name="port" index="1" value="${public.redis.port}"/>
                    <constructor-arg name="timeout" index="2" value="${public.redis.timeout}"/>
                    <property name="password" value="${public.redis.password}" />
                </bean>
            </list>
        </constructor-arg>
    </bean>

    <bean id="shardedJedisCached" class="cn.com.daocaore.monitor.common.cache.ShardedJedisCached">
        <property name="jedisPool" ref="shardedJedisPool"/>
    </bean>
</beans>