<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.yuzhushui.schedule.job.biz.dao.JobInfoDao">
	<resultMap type="cn.com.yuzhushui.schedule.job.biz.entity.JobInfo" id="BaseResultMap">
        <result property="id" column="id" javaType="Integer"/>
        <result property="name" column="name" javaType="String"/>
        <result property="groups" column="groups" javaType="String"/>
        <result property="type" column="type" javaType="cn.com.yuzhushui.schedule.enums.JobInfoEnum$TYPE"/>
        <result property="time" column="time" javaType="Date"/>
        <result property="cron" column="cron" javaType="String"/>
        <result property="urls" column="urls" javaType="String"/>
        <result property="classPath" column="class_path" javaType="String"/>
        <result property="invokePolicy" column="invoke_policy" javaType="cn.com.yuzhushui.schedule.enums.JobInfoEnum$INVOKE_POLICY"/>
        <result property="isActivity" column="is_activity" javaType="Integer"/>
        <result property="desc" column="desc" javaType="String"/>
        <result property="createTime" column="create_time" javaType="Date"/>
        <result property="modifyTime" column="modify_time" javaType="Date"/>
        <result property="param" column="param" javaType="String"/>
	</resultMap>
	
	<sql id="full-columns" >
        t.id,
        t.name,
        t.groups,
        t.type,
        t.time,
        t.cron,
        t.urls,
        t.class_path,
        t.invoke_policy,
        t.is_activity,
        t.desc,
        t.create_time,
        t.modify_time,
        t.param
	</sql>
	
	<!-- 查询条件 -->
	<sql id="queryCriteria">
		 <if test="@OGNL@isNotEmpty(id)">
            AND t.id = #{id}
         </if>
		 <if test="@OGNL@isNotEmpty(name)">
            AND t.name = #{name}
         </if>
		 <if test="@OGNL@isNotEmpty(groups)">
            AND t.groups = #{groups}
         </if>
		 <if test="@OGNL@isNotEmpty(type)">
            AND t.type = #{type}
         </if>
		 <if test="@OGNL@isNotEmpty(time)">
            AND t.time = #{time}
         </if>
		 <if test="@OGNL@isNotEmpty(cron)">
            AND t.cron = #{cron}
         </if>
		 <if test="@OGNL@isNotEmpty(urls)">
            AND t.urls = #{urls}
         </if>
		 <if test="@OGNL@isNotEmpty(classPath)">
            AND t.class_path = #{classPath}
         </if>
		 <if test="@OGNL@isNotEmpty(invokePolicy)">
            AND t.invoke_policy = #{invokePolicy}
         </if>
		 <if test="@OGNL@isNotEmpty(isActivity)">
            AND t.is_activity = #{isActivity}
         </if>
		 <if test="@OGNL@isNotEmpty(desc)">
            AND t.desc = #{desc}
         </if>
		 <if test="@OGNL@isNotEmpty(createTime)">
            AND t.create_time = #{createTime}
         </if>
		 <if test="@OGNL@isNotEmpty(modifyTime)">
            AND t.modify_time = #{modifyTime}
         </if>
		 <if test="@OGNL@isNotEmpty(param)">
            AND t.param = #{param}
         </if>
	</sql>

	<insert id="insert" parameterType="cn.com.yuzhushui.schedule.job.biz.entity.JobInfo" >
		<![CDATA[
	        INSERT INTO job_info (
	            name ,
	            groups ,
	            type ,
	            time ,
	            cron ,
	            urls ,
	            class_path ,
	            invoke_policy ,
	            is_activity ,
	            desc ,
	            create_time ,
	            modify_time ,
	            param 
	        ) VALUES (
	        	#{name},
	        	#{groups},
	        	#{type},
	        	#{time},
	        	#{cron},
	        	#{urls},
	        	#{classPath},
	        	#{invokePolicy},
	        	#{isActivity},
	        	#{desc},
	        	now(),
	        	now(),
	        	#{param}
	        )
	    ]]>
    	<selectKey resultType="java.lang.Integer" keyProperty="id">
			SELECT LAST_INSERT_ID() AS id
        </selectKey>
	</insert>
	
	<insert id="insertBatch" parameterType="java.util.List" >
		<![CDATA[
	        INSERT INTO job_info (
	            name ,
	            groups ,
	            type ,
	            time ,
	            cron ,
	            urls ,
	            class_path ,
	            invoke_policy ,
	            is_activity ,
	            desc ,
	            create_time ,
	            modify_time ,
	            param 
	        ) VALUES 
	        <foreach collection="list" item="item" index="index" separator=",">
	        (
	        	#{name},
	        	#{groups},
	        	#{type},
	        	#{time},
	        	#{cron},
	        	#{urls},
	        	#{classPath},
	        	#{invokePolicy},
	        	#{isActivity},
	        	#{desc},
	        	#{createTime},
	        	#{modifyTime},
	        	#{param}
	        )
	        </foreach>
	    ]]>
	</insert>
	
	<update id="delete" parameterType="java.lang.Integer">
        UPDATE job_info SET deleted=1 
        WHERE deleted=0 AND
        	id = #{value}
	</update>
	<update id="deleteBatch" parameterType="list" >
        UPDATE job_info SET deleted=1 
        WHERE deleted=0 AND
        	id IN 
        <foreach collection="list" item = "id" open="(" separator="," close=")">
        	#{id}
		</foreach>
	</update>
	
	<update id="update" parameterType="cn.com.yuzhushui.schedule.job.biz.entity.JobInfo">
        UPDATE job_info 
        <set>
        	<if test="@OGNL@isNotEmpty(name)">
	            name = #{name},
	        </if>
        	<if test="@OGNL@isNotEmpty(groups)">
	            groups = #{groups},
	        </if>
        	<if test="@OGNL@isNotEmpty(type)">
	            type = #{type},
	        </if>
        	<if test="@OGNL@isNotEmpty(time)">
	            time = #{time},
	        </if>
        	<if test="@OGNL@isNotEmpty(cron)">
	            cron = #{cron},
	        </if>
        	<if test="@OGNL@isNotEmpty(urls)">
	            urls = #{urls},
	        </if>
        	<if test="@OGNL@isNotEmpty(classPath)">
	            class_path = #{classPath},
	        </if>
        	<if test="@OGNL@isNotEmpty(invokePolicy)">
	            invoke_policy = #{invokePolicy},
	        </if>
        	<if test="@OGNL@isNotEmpty(isActivity)">
	            is_activity = #{isActivity},
	        </if>
        	<if test="@OGNL@isNotEmpty(desc)">
	            desc = #{desc},
	        </if>
        	<if test="@OGNL@isNotEmpty(createTime)">
	            create_time = #{createTime},
	        </if>
        	<if test="@OGNL@isNotEmpty(modifyTime)">
	            modify_time = #{modifyTime},
	        </if>
        	<if test="@OGNL@isNotEmpty(param)">
	            param = #{param},
	        </if>
        </set>
        WHERE deleted=0
        	AND id = #{id}
	</update>
	
	<select id="queryById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
	   	SELECT <include refid="full-columns" />
       	<![CDATA[
       	FROM job_info t
       	WHERE t.id = #{value}
		]]>
    </select>
	
	<select id="query" parameterType="map" resultMap="BaseResultMap">
		SELECT <include refid="full-columns" />
	    FROM job_info t
		<where> <include refid="queryCriteria"/>  </where>
		<if test="@OGNL@isNotEmpty(orderColumn) ">
        ORDER BY t.${orderColumn} <if test="@OGNL@isNotEmpty(orderDirection) ">${orderDirection}</if>
        </if>
	</select>
	
	<select id="queryPage" parameterType="map" resultMap="BaseResultMap">
		SELECT 
        <include refid="full-columns" />
            FROM job_info t
		<where> <include refid="queryCriteria"/>  </where>
		<if test="@OGNL@isNotEmpty(orderColumn) ">
        ORDER BY t.${orderColumn} <if test="@OGNL@isNotEmpty(orderDirection) ">${orderDirection}</if>
        </if>
        LIMIT #{start}, #{pageSize}
	</select>

	<select id="queryCount" parameterType="map" resultType="java.lang.Integer">
		select count(id) FROM job_info 
        <where> <include refid="queryCriteria"/>  </where>
	</select>
</mapper>
